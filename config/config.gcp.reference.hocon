{
  "input": {
    # -- Pubsub subscription for the source of enriched events (required)
    "subscription": "projects/myproject/subscriptions/snowplow-enriched"

    # -- How many threads are used internally by the pubsub client library for fetching events
    "parallelPullCount": 3

    # -- How many bytes can be buffered by the loader app before blocking the pubsub client library
    # -- from fetching more events.
    # -- This is a balance between memory usage vs how efficiently the app can operate.  The default value works well.
    "bufferMaxBytes": 10000000

    # -- Sets min/max boundaries on the value by which an ack deadline is extended.
    # -- The actual value used is guided by runtime statistics collected by the pubsub client library.
    "minDurationPerAckExtension": "60 seconds"
    "maxDurationPerAckExtension": "600 seconds"
  }

  "output": {

    "good": {
      # -- URI of the bucket where the data lake will be written (required)
      # -- For a GCS bucket, the uri should start with `gs://`
      "location": "gs://my-bucket/events

      # -- Atomic columns which should be brought to the "left-hand-side" of the events table, to
      # -- enable Delta's Data Skipping feature.
      # -- The Delta table property `delta.dataSkippingNumIndexedCols` will be set to the size of the list
      "dataSkippingColumns": [
        "load_tstamp"
        "collector_tstamp"
        "derived_tstamp"
        "dvce_created_tstamp"
      ]
    }

    "bad": {
      # -- Output pubsub topic for emitting failed events that could not be processed (required)
      "topic": "projects/myproject/topics/snowplow-bad"

      # -- Bad events are sent to Pubsub in batches not exceeding this count.
      "batchSize": 100
      # -- Bad events are sent to Pubsub in batches with a total size not exceeding this byte threshold
      "requestByteThreshold": 1000000
    }

  }

  # -- Controls how many events are buffered in memory before saving the batch to local disk.
  # -- The default value works well for most reasonably sized VMs.
  "inMemBatchBytes": 25600000

  # -- Controls how the app splits the workload into concurrent batches which can be run in parallel.
  # -- E.g. If there are 4 available processors, and cpuParallelismFraction = 0.75, then we process 3 batches concurrently.
  # -- Adjusting this value can cause the app to use more or less of the available CPU.
  "cpuParallelismFraction": 0.75

  # -- Controls how often we write/commit pending events to the data lake.
  "windowing": "5 minutes"

  # -- Settings relating to the local Spark context use internally by this loader.
  "spark": {

    # -- How many times a Spark task should be retried in case of failure.
    "taskRetries": 3

    # -- Any valid spark configuration key/value.
    # -- This can be blank in most setups because the loader already sets sensible defaults.
    "conf": {
      # -- E.g. to enable the spark ui for debugging:
      "spark.ui.enabled": true
    }
  }

  "monitoring": {
    "metrics": {

      # -- Send runtime metrics to a statsd server
      # -- `hostname` is the only required field in order to turn on this feature.
      "statsd": {

        # -- Hostname or IP of a statsd server.
        "hostname": "127.0.0.1"

        # -- Port of the statsd server.
        "port": 8125

        # -- Map of key/value pairs to be send along with the statsd metric.
        "tags": {
          "myTag": "xyz"
        }

        # -- How often to report metrics to statsd.
        "period": "1 minute"

        # -- Prefix used for the metric name when sending to statsd.
        "prefix": "snowplow.lakeloader"
      }
    }

    # -- Report unexpected runtime exceptions to Sentry
    "sentry": {
      "dsn": "https://public@sentry.example.com/1"

      # -- Map of key/value pairs to be included as tags
      "tags": {
        "myTag": "xyz"
      }
    }

    # -- Open a HTTP server that returns OK only if the app is healthy
    "healthProbe": {
      "port": 8000

      # -- Health probe becomes unhealthy if events are not being processed faster than this cuttoff
      # -- time
      "unhealthyLatency": "1 minute"
    }
  }

  # -- Optional, configure telemetry
  # -- All the fields are optional
  "telemetry": {

    # -- Set to true to disable telemetry
    "disable": false

    # -- Identifier intended to tie events together across modules,
    # -- infrastructure and apps when used consistently
    "userProvidedId": "my_company"

  }
}
